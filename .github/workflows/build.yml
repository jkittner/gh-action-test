name: build

on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    services:
      postgres:
        image: postgres:10.14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres

    steps:
    - name: docker stuff
      run: |
        docker ps -a
        docker exec -i postgres echo "Hello from container"
        docker exec -it postgres apt-get install curl
    - uses: actions/checkout@v2
    - name: test postgres
      run: |
        psql --version
        PGPASSWORD=postgres psql -h localhost -U postgres < db.sql
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -r requirements-dev.txt
    - name: Test with pytest get coverage
      run: |
        pytest --cov=gh_action_test --cov-config=.coveragerc --cov-report=xml
        coverage report --fail-under=100
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    - name: Install package
      run: python -m pip install .
    - name: Execute sayhi
      run: sayhi
